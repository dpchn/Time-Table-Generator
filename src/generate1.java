/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Durga
 */
import java.sql.*;
import java.util.Random;
public class generate1 extends javax.swing.JInternalFrame {

    /**
     * Creates new form generate1
     */
    public generate1() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jOptionPane2 = new javax.swing.JOptionPane();
        jOptionPane1 = new javax.swing.JOptionPane();
        jComboBox1 = new javax.swing.JComboBox();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setTitle("Generate Table");
        setPreferredSize(new java.awt.Dimension(400, 300));

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jButton1.setText("GENERATE");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "", "CSE", "ECE", "EEE", "ME", "CE" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jOptionPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(225, 225, 225)
                .addComponent(jOptionPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(106, 106, 106))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(108, 108, 108)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(166, 166, 166)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(71, Short.MAX_VALUE)
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(96, 96, 96)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jOptionPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jOptionPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    int sel=0;
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        if(sel>0)
        {
            regenerate g2=new regenerate();
            g2.call();//////////call fucntion for assing 
       
         jOptionPane2.showMessageDialog(this,"Successfully Generated");
                             generate1 g1=new generate1();
                             g2.setVisible(true);
                             g1.setVisible(false);///////////Call display fucntion from regenerate
        }
        else
            jOptionPane2.showInternalMessageDialog(this,"Select Branch for which you want to generate Time Table");
        
        
      
      

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
       sel=jComboBox1.getSelectedIndex();
    }//GEN-LAST:event_jComboBox1ActionPerformed


    
    

    
    int status(String sub[],int lp1,String day[][],int i)//for check suject on that day
       {
           int check=0;
           for(int j=0;j<5;j++)   
                  {
                      if(sub[lp1].equals(day[i][j]))
                          check=1;   
                  }
           return check;
       }
    
     
     
    void assign(String insertf[][],int f,String other1[][],String other2[][],String sub[],int lp,String subject[][],String fac[])
    {
       
        int j=0,f1;
       for(int i=0;i<5;i++)
       { 
           int com1=other1[f][i].compareTo(fac[lp]);
           int com2=other2[f][i].compareTo(fac[lp]);
           if(f>0)
           {
              f1=f-1;
           }
           else
               f1=f;
           int com3=sub[lp].compareTo(subject[f1][i]);
           if(insertf[f][i]=="s" && com1!=0 && com2!=0 && com3!=0 )
           {
             
              if(i==0)
                   {
                   insertf[f][i]=fac[lp];
                   subject[f][i]=sub[lp];   
                   System.out.println(subject[f][i]+" "+sub[lp]);
                   break;
                  }
              else
               {   
                   int k=i-1; 
                   int com=insertf[f][k].compareTo(fac[lp]);
                   if(com!=0)
                   {
                   insertf[f][i]=fac[lp];
                   subject[f][i]=sub[lp];
                   System.out.println(subject[f][i]+" "+sub[lp]);
                   break;
                   }
               }
            }
               
           }
       }
    
    
    
    
    
    int labcheck(String sub[],int lp1,String day[][],int j)
    {
        int check=0;
        for(int i=5;i<7;i++)
        {
            if(sub[lp1]==day[j][i])
                check=1;
        }
     return check;   
    }
    
    int cals(String day[][],int j)
    {
        int check=0;
        for(int i=0;i<5;i++)
        {
            if(day[j][i].equals("s"))
                check++;
        }
        return check;
    }
    
    
    //////////////////lab check no. of s
    int calslab(String day[][],int j)
    {
        int check=0;
        for(int i=5;i<7;i++)
        {
            if(day[j][i].equals("s"))
                check++;
        }
        return check;
    }
    
    
    
    void assignlab(String insertf[][],int f,String other1[][],String other2[][],String sub[],int lp,String subject[][],String fac[])
    {
         for(int i=5;i<7;i++)
       {

               int com1=other1[f][i].compareTo(fac[lp]);
               int com2=other1[f][i].compareTo(fac[lp]);
           
               if(insertf[f][i]=="s" && com1!=0 && com2!=0)
                {
                   if(i==0)
                   {
                   insertf[f][i]=fac[lp];
                   subject[f][i]=sub[lp];
                   break;
                  }
               else
               {   
                   int k=i-1; 
                   int com=insertf[f][k].compareTo(fac[lp]);
               
              
                   if(com!=0)
                   {
                   insertf[f][i]=fac[lp];
                   subject[f][i]=sub[lp];
                   break;
                   }
               }
                }
       }
    }//////////////////////////////////////////////////////////////
    /////////////////////////////////////////////////////
    
    
    
    
    void lab1(int lab[],int lp,String sub[],String fac[],String CSEf[][],String other1[][],String other2[][],String CSE[][])    
    {
        int checklab;
        int check1;
        for(
                int i=0;i<lab[lp];i++)
                     {
                       checklab=labcheck(sub,lp,CSE,0);
                       check1=calslab(CSE,0);
                       if(checklab==0 && check1>0)
                       {
                           assignlab(CSEf,0, other1,other2,sub,lp,CSE,fac);
                       }
                       else
                       {
                           check1=calslab(CSE,1);
                          checklab=labcheck(sub,lp,CSE,1);//Monady
                           if(checklab==0 && check1>0)
                           {
                           assignlab(CSEf,1, other1,other2,sub,lp,CSE,fac);
                          }
                          else
                          {
                            check1=calslab(CSE,2);
                            checklab=labcheck(sub,lp,CSE,2);//Tuesday
                            if(checklab==0 && check1>0)
                            {
                            assignlab(CSEf,2, other1,other2,sub,lp,CSE,fac);
                            }
                            else
                            {
                                check1=calslab(CSE,3);
                                checklab=labcheck(sub,lp,CSE,3);//Wednesday
                                if(checklab==0 && check1>0)
                                {
                                  assignlab(CSEf,3, other1,other2,sub,lp,CSE,fac);
                                }
                                else
                                {
                                     check1=calslab(CSE,4);
                                    checklab=labcheck(sub,lp,CSE,4);//Thursday
                                    if(checklab==0 && check1>0)
                                    {
                                     assignlab(CSEf,4, other1,other2,sub,lp,CSE,fac);
                                    }
                                    else
                                    {
                                        check1=calslab(CSE,5);
                                       checklab=labcheck(sub,lp,CSE,5);//Friday
                                        if(checklab==0 && check1>0)
                                        {
                                         assignlab(CSEf,5, other1, other2,sub,lp,CSE,fac);
                                        } 
                                    }
                                }
                            }
                        }
                       } 
                     }
                  }
    ////////////////////////////////////////////////////////////////Theory
    ///////////////////////////////////////////
    
    
     int i1,i2,i3;
   void theory1(int lec[],int lp,String sub[],String fac[],String CSEf[][],String other1[][],String other2[][],String CSE[][])
    {
      //System.out.println();
        int check;
        int check1;
      for(int i=0;i<lec[lp];i++)
                 {
                    check=status(sub,lp,CSE,0);//Monady
                    check1=cals(CSE,0);
                    if(check==0 && check1>0)
                    {
                        assign(CSEf,0,other1, other2,sub,lp,CSE,fac);
                    }
                    else
                    {
                        check=status(sub,lp,CSE,1);//Tuesday
                        check1=cals(CSE,1);
                        if(check==0 && check1>0)
                        {
                          assign(CSEf,1,other1, other2,sub,lp,CSE,fac);
                        }
                        else
                        {
                            check=status(sub,lp,CSE,2);//Wednesday
                            check1=cals(CSE,2);
                            if(check==0 && check1>0)
                            {
                              assign(CSEf,2,other1, other2,sub,lp,CSE,fac);
                            }
                            else
                            {
                                int check11=cals(CSE,3);
                                check=status(sub,lp,CSE,3);//Thursday
                                i1=check11;
                                if(check==0 && check11>0)
                                {
                                  assign(CSEf,3,other1, other2,sub,lp,CSE,fac);
                                }
                                else
                                {
                                    int check12=cals(CSE,4);
                                    check=status(sub,lp,CSE,4);//Friday
                                    i2=check12;
                                    if(check==0 && check12>0)
                                    {
                                     assign(CSEf,4,other1, other2,sub,lp,CSE,fac);
                                    }
                                    else
                                    {
                                        int check13=cals(CSE,5);
                                       check=status(sub,lp,CSE,5);//Saturday
                                       i3=check13;
                                        if(check==0 && check13>0)
                                        {
                                         assign(CSEf,5,other1, other2,sub,lp,CSE,fac);
                                        } 
                                        else
                                        {
                                            int min=0;
                                          int dialogButton=0;
               dialogButton = jOptionPane2.showConfirmDialog (null, "Too much burden on "+fac[lp]+"\nDo you want to break contraint for "+fac[lp],"WARNING", dialogButton);
                                         if(dialogButton==0)
                                            {
                                            if(i1>1)
                                            {
                                             min=3;  
                                            }
                                            else if(i2>1)
                                            {
                                              min=4;  
                                            }
                                            else if(i3>1)
                                            {
                                                min=5;
                                            }
                                            Random rn = new Random();
                                            
                                            int ran=rn.nextInt((5 - min) + 1) + min;
                                            assignafterbreakconstraint(CSEf,ran,other1, other2,sub,lp,CSE,fac); 
                                            }  
                                        }
                                    }
                                }
                            }
                        }
                    }    
                 }  
    }
   /////////////////////////////////////////////////
   ////////////////////////////////////////////////Break Constraint  Then assign
    
    
   
   
    void assignafterbreakconstraint(String insertf[][],int f,String other1[][],String other2[][],String sub[],int lp,String subject[][],String fac[])
    {
        int j=0;
       for(int i=0;i<5;i++)
       {
           
           if(insertf[f][i]=="s" && other1[f][i]!=fac[lp] && other2[f][i]!=fac[lp])
           {
                  insertf[f][i]=fac[lp];
                   subject[f][i]=sub[lp];
                   break;                
           }
         }
       }

 
    
    
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JOptionPane jOptionPane1;
    private javax.swing.JOptionPane jOptionPane2;
    // End of variables declaration//GEN-END:variables
}
